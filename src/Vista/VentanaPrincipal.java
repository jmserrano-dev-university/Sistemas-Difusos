/**
 * Clase VentanaPrincipal
 * @author José Manuel Serrano Mármol
 */

package Vista;

import Modelo.Defusificador;
import Modelo.IOFicheros;
import Modelo.InferenciaMamdani;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        
        //Inicialización de las variables
        _listaGraficosVariables = new ArrayList<JFreeChart>();
        _listaGraficosReglas = new ArrayList<JFreeChart>();
        _listaVariablesEntrada = new ArrayList<MiJTextField>();
        _listaValoresEntradas = new ArrayList<Float>();
        _mamdani = new InferenciaMamdani();
        _defusificacion = new Defusificador(_mamdani);
        _resultadosCorrectos = false;
        _operadorUtilizado = 1;
        
        panelVariables.setLayout(new GridLayout(15, 1));
        
        //Icono
        this.setIconImage(new ImageIcon(getClass().getResource("")).getImage());
        
        //Ponemos gestores de distribución
        pBaseDatos.setLayout(new javax.swing.BoxLayout(pBaseDatos,javax.swing.BoxLayout.Y_AXIS));
        pBaseReglas.setLayout(new javax.swing.BoxLayout(pBaseReglas,javax.swing.BoxLayout.Y_AXIS));
        
        //Añadimos evento de resize
        
        this.addComponentListener(new ComponentAdapter() {
        
            @Override
            public void componentResized(ComponentEvent e) {
                pBaseDatos.removeAll();
                for(int i = 0; i < _listaGraficosVariables.size();i++){    
                    ChartPanel panel = new ChartPanel(_listaGraficosVariables.get(i));
                    Dimension d = new Dimension(pBaseDatos.getWidth()-200,pBaseDatos.getHeight()-200);
                    panel.setMinimumSize(d);
                    panel.setMaximumSize(d);
                    pBaseDatos.add(panel);
                }
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taLog = new javax.swing.JTextArea();
        Resultados = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        pBaseDatos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pBaseReglas = new javax.swing.JLayeredPane();
        pResultados = new javax.swing.JScrollPane();
        pResult = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jtResultado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcOperador = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelVariables = new javax.swing.JPanel();
        mbBarraMenu = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        miAbrirBD = new javax.swing.JMenuItem();
        miSalir = new javax.swing.JMenuItem();
        mEdicion = new javax.swing.JMenu();
        mAcercaDe = new javax.swing.JMenu();
        miAcercaDe = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistemas Difusos - Mamdani");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane2.setDividerLocation(150);

        jSplitPane3.setDividerLocation(350);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        taLog.setColumns(20);
        taLog.setRows(5);
        jScrollPane1.setViewportView(taLog);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane3.setRightComponent(jPanel2);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout pBaseDatosLayout = new javax.swing.GroupLayout(pBaseDatos);
        pBaseDatos.setLayout(pBaseDatosLayout);
        pBaseDatosLayout.setHorizontalGroup(
            pBaseDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        pBaseDatosLayout.setVerticalGroup(
            pBaseDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(pBaseDatos);

        Resultados.addTab("Base de datos", jScrollPane2);

        jScrollPane3.setViewportView(pBaseReglas);

        Resultados.addTab("Base de Reglas", jScrollPane3);

        javax.swing.GroupLayout pResultLayout = new javax.swing.GroupLayout(pResult);
        pResult.setLayout(pResultLayout);
        pResultLayout.setHorizontalGroup(
            pResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        pResultLayout.setVerticalGroup(
            pResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        pResultados.setViewportView(pResult);

        Resultados.addTab("Resultados", pResultados);

        jSplitPane3.setLeftComponent(Resultados);

        jSplitPane2.setBottomComponent(jSplitPane3);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setMaximumSize(new java.awt.Dimension(129, 32767));
        jPanel6.setMinimumSize(new java.awt.Dimension(129, 100));

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtResultado.setEditable(false);

        jLabel1.setText("Resultado");

        jLabel2.setText("Operador");

        jcOperador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Min", "Max", "Producto", "Suma algebraica" }));
        jcOperador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcOperadorItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtResultado)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jcOperador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcOperador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelVariables.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout panelVariablesLayout = new javax.swing.GroupLayout(panelVariables);
        panelVariables.setLayout(panelVariablesLayout);
        panelVariablesLayout.setHorizontalGroup(
            panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 127, Short.MAX_VALUE)
        );
        panelVariablesLayout.setVerticalGroup(
            panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(panelVariables);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel5);

        mArchivo.setText("Archivo");

        miAbrirBD.setText("Abrir Base de datos...");
        miAbrirBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAbrirBDActionPerformed(evt);
            }
        });
        mArchivo.add(miAbrirBD);

        miSalir.setText("Salir");
        miSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalirActionPerformed(evt);
            }
        });
        mArchivo.add(miSalir);

        mbBarraMenu.add(mArchivo);

        mEdicion.setText("Edición");
        mbBarraMenu.add(mEdicion);

        mAcercaDe.setText("Ayuda");

        miAcercaDe.setText("Acerca de...");
        miAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAcercaDeActionPerformed(evt);
            }
        });
        mAcercaDe.add(miAcercaDe);

        mbBarraMenu.add(mAcercaDe);

        setJMenuBar(mbBarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAcercaDeActionPerformed
        
    }//GEN-LAST:event_miAcercaDeActionPerformed

    private void miAbrirBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAbrirBDActionPerformed
        JFileChooser archivo = new JFileChooser();
        archivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
        archivo.setMultiSelectionEnabled(true);
        int seleccion = archivo.showOpenDialog(this);
        
        if(seleccion == JFileChooser.APPROVE_OPTION){
            File[] fichero = archivo.getSelectedFiles();
            if(fichero.length > 2 || fichero.length < 1){
                System.out.println("No se ha seleccionado los archivos correctos");
            }else{
                String ruta1 = fichero[0].getAbsolutePath();
                String ruta2 = fichero[1].getAbsolutePath();
                System.out.println(ruta1.substring(ruta1.length()-3, ruta1.length()));
                if(ruta1.substring(ruta1.length()-3, ruta1.length()).equalsIgnoreCase("pwm")){
                    _rutaFicheroBD = ruta1;
                    _rutaFicheroReglas = ruta2;
                }else{
                    _rutaFicheroBD = ruta2;
                    _rutaFicheroReglas = ruta1;
                }
                
            }
            
            IOFicheros _ficheroBD = new IOFicheros(_rutaFicheroBD);
            IOFicheros _ficheroReglas = new IOFicheros(_rutaFicheroReglas);

            taLog.setText("Base de datos: Leida\n");
            System.out.println("Base de datos");
            _mamdani._baseDatos = _ficheroBD.leerBaseDatos();
            for(int i = 0; i < _mamdani._baseDatos.size(); i++){
                _mamdani._baseDatos.get(i).out();
                System.out.println("\n******************************\n");

           taLog.append("Base de reglas: Leida\n");            }

           System.out.println("Base de reglas");
            _mamdani._baseReglas = _ficheroReglas.leerReglas(_mamdani._baseDatos);
            for(int i = 0; i < _mamdani._baseReglas.size(); i++){
                _mamdani._baseReglas.get(i).out();
                System.out.println("\n******************************\n");
            }
            
            //Limpiarmos panle de variables
            panelVariables.removeAll();
            _listaVariablesEntrada.clear();
            
            dibujarVariablesBD();
            
            if(jcOperador.getSelectedIndex() == 0 || jcOperador.getSelectedIndex() == 2){
                dibujarReglas(true);
            }else{
                dibujarReglas(false);
            }
            
            
            anadirCuadrosVariables();
            
            pBaseDatos.updateUI();
        }
    }//GEN-LAST:event_miAbrirBDActionPerformed

    private void miSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalirActionPerformed
        confirmacionSalida();
    }//GEN-LAST:event_miSalirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //confirmacionSalida();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Captamos las variables
        _listaValoresEntradas.clear(); //Limpiamos la lista de valores
        boolean bandera = true;
        
        _resultadosCorrectos = false;
        
        for(int i = 0; i < _listaVariablesEntrada.size() && bandera; i++){
            try{
                float valor = Float.parseFloat(_listaVariablesEntrada.get(i).getText());
                float rInf = _mamdani._baseDatos.get(i).getRangoInferior();
                float rSup = _mamdani._baseDatos.get(i).getRangoSuperior();
            
                if(valor < rInf || valor > rSup){
                    taLog.append("** Variable x"+ (i+1) + " fuera de rango ["+ rInf + ", " + rSup + "]\n");
                    bandera = false;
                }else{
                    _listaValoresEntradas.add(valor);
                }
                
            }catch(Exception e){
                taLog.append("** Error las variables debe ser reales\n");
                bandera = false;
                break;
            }
        }
        if(bandera){
            _resultadosCorrectos = true;
        }
        
        if(_resultadosCorrectos){
            //Hacemos los calculos mamdani
            System.out.println("Operador seleccionado: " + jcOperador.getSelectedIndex() + 1);
            _mamdani.ejecutarMamdani(_listaValoresEntradas,jcOperador.getSelectedIndex() + 1);

            //Hacemos defusificación
            Float resultado = _defusificacion.ejecutarDefusificacion();
            jtResultado.setText("");
            jtResultado.setText(resultado.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcOperadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcOperadorItemStateChanged
        if(jcOperador.getSelectedIndex() == 0 || jcOperador.getSelectedIndex() == 2){
            dibujarReglas(true);
            
            if(jcOperador.getSelectedIndex() == 0) _operadorUtilizado = 1;
            if(jcOperador.getSelectedIndex() == 2) _operadorUtilizado = 3;
            
        }else{
            dibujarReglas(false);
            
            if(jcOperador.getSelectedIndex() == 1) _operadorUtilizado = 2;
            if(jcOperador.getSelectedIndex() == 3) _operadorUtilizado = 4;
        }
        
        System.out.println("OPERADOR UTILIZADO es: " + _operadorUtilizado);
        
        pBaseReglas.repaint();
    }//GEN-LAST:event_jcOperadorItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Resultados;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JComboBox jcOperador;
    private javax.swing.JTextField jtResultado;
    private javax.swing.JMenu mAcercaDe;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenu mEdicion;
    private javax.swing.JMenuBar mbBarraMenu;
    private javax.swing.JMenuItem miAbrirBD;
    private javax.swing.JMenuItem miAcercaDe;
    private javax.swing.JMenuItem miSalir;
    private javax.swing.JPanel pBaseDatos;
    private javax.swing.JLayeredPane pBaseReglas;
    private javax.swing.JPanel pResult;
    private javax.swing.JScrollPane pResultados;
    private javax.swing.JPanel panelVariables;
    private javax.swing.JTextArea taLog;
    // End of variables declaration//GEN-END:variables
    
    
    //************* VARIABLES
    InferenciaMamdani _mamdani;
    Defusificador _defusificacion;
    private String _rutaFicheroBD;
    private String _rutaFicheroReglas;
    List<JFreeChart> _listaGraficosVariables;
    List<JFreeChart> _listaGraficosReglas;
    List<Float> _listaValoresEntradas;
    List<MiJTextField> _listaVariablesEntrada;
    boolean _resultadosCorrectos;
    int _operadorUtilizado;
    
    //************* MÉTODOS
    private void dibujarVariablesBD(){
        _listaGraficosVariables.clear();
        pBaseDatos.removeAll();
        for(int i = 0; i < _mamdani._baseDatos.size(); i++){
            int j = 0;
            XYSeriesCollection dataset = new XYSeriesCollection();
            while(j < _mamdani._baseDatos.get(i).getNumeroTripletas()){
                XYSeries serie = new XYSeries("Variable " + i + " | " + j);
                List<Float> elementosTripleta = _mamdani._baseDatos.get(i).getSiguienteTripleta().leerElementosTripleta();

                if(elementosTripleta.size() == 3){
                    serie.add((double)elementosTripleta.get(0),0);
                    serie.add((double)elementosTripleta.get(1),1);
                    serie.add((double)elementosTripleta.get(2),0);
                }else{
                    serie.add((double)elementosTripleta.get(0),0);
                    serie.add((double)elementosTripleta.get(1),1);
                    serie.add((double)elementosTripleta.get(2),1);
                    serie.add((double)elementosTripleta.get(3),0);
                }
                j++;
                dataset.addSeries(serie);
            }
            //Guardamos los gráficos
            
            if(i == _mamdani._baseDatos.size() - 1){
                JFreeChart grafico = ChartFactory.createXYLineChart("Y ", "", "", dataset, PlotOrientation.VERTICAL, true, true, false);
                _listaGraficosVariables.add(grafico);
            }else{
                JFreeChart grafico = ChartFactory.createXYLineChart("X " + (i + 1), "", "", dataset, PlotOrientation.VERTICAL, true, true, false);
                _listaGraficosVariables.add(grafico);
            }
            
            
            
        }
        
        for(int i =0; i < _listaGraficosVariables.size();i++){
            ChartPanel panel = new ChartPanel(_listaGraficosVariables.get(i));
            Dimension d = new Dimension(pBaseDatos.getWidth(),pBaseDatos.getHeight());
            panel.setMaximumSize(d);
            pBaseDatos.add(panel);
        }
    }
    
    private void dibujarReglas(boolean isAND){
        pBaseReglas.removeAll();
        String valor;
        
        if(isAND){
            valor = " and ";
        }else{
            valor = " or ";
        }
        
        for(int i = 0; i < _mamdani._baseReglas.size(); i++){
            int num = _mamdani._baseReglas.get(i).numTripletasRegla();
            String regla = "R" + (i+1) + ": ";
            int contador = 1;
            
            for(int j = 0; j < num; j++){
                if(j == num -1){ //resultado de la regla
                    regla = regla.substring(0, regla.length()-2);
                    regla = regla + " entonces Y es " + _mamdani._baseReglas.get(i).leerParteRegla(j).getNombreEtiqueta();
                }else{ //Si de la regla
                    regla = regla + "Si X"+ contador + " es " + _mamdani._baseReglas.get(i).leerParteRegla(j).getNombreEtiqueta() + valor;
                }
                contador++;
            }
            JLabel r = new JLabel(regla);
            pBaseReglas.add(r);
        }
    }
    
    /**
     * Función que muestra un cuadro de dialogo para confirmar su salida del sistema
     */
    private void confirmacionSalida(){
        int opcion = JOptionPane.showConfirmDialog(this, "¿Realmente desea salir?", "Salir", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(opcion == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
    
    /**
     * Función para añadir los cuadros para poner las variables
     */
    private void anadirCuadrosVariables(){
        for(int i = 0; i < _mamdani._baseDatos.size() - 1; i++){
            //Etiqueta
            JLabel etiq = new JLabel("Variable X" + (i+1));
            panelVariables.add(etiq);
            
            //Cuadro de texto
            MiJTextField cuadro = new MiJTextField("Escriba variable x" + (i+1), 10, Color.BLACK);
            _listaVariablesEntrada.add(cuadro);
            
            panelVariables.add(cuadro);
        }
        panelVariables.validate();
        panelVariables.repaint();
    }
}
